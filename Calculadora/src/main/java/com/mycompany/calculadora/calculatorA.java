/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.calculadora;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JButton;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author User
 */
public class calculatorA extends javax.swing.JFrame {

    /**
     * Creates new form calculatorA
     */
    public calculatorA() {
        initComponents();
        this.setLocationRelativeTo(null);
        miPersonalizacion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        jButton1.setText("7");
        buttons.add(jButton1);
        jButton1.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton2.setText("8");
        buttons.add(jButton2);
        jButton2.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton3.setText("9");
        buttons.add(jButton3);
        jButton3.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton4.setText("4");
        buttons.add(jButton4);
        jButton4.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton5.setText("5");
        buttons.add(jButton5);
        jButton5.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton6.setText("6");
        buttons.add(jButton6);
        jButton6.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton7.setText("1");
        buttons.add(jButton7);
        jButton7.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton8.setText("2");
        buttons.add(jButton8);
        jButton8.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton9.setText("3");
        buttons.add(jButton9);
        jButton9.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton10.setText("0");
        buttons.add(jButton10);
        jButton10.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton11.setText("=");
        jButton11.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton12.setText("(");
        buttons.add(jButton12);
        jButton12.setPreferredSize(new java.awt.Dimension(50, 23));

        jButton13.setText(")");
        buttons.add(jButton13);
        jButton13.setPreferredSize(new java.awt.Dimension(50, 23));

        jButton14.setText("X");
        jButton14.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton15.setText("√");
        sings.add(jButton15);
        jButton15.setPreferredSize(new java.awt.Dimension(50, 23));

        jButton16.setText("xⁿ");
        sings.add(jButton16);
        jButton16.setPreferredSize(new java.awt.Dimension(50, 23));

        jButton17.setText("+");
        sings.add(jButton17);
        jButton17.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton18.setText("*");
        sings.add(jButton18);
        jButton18.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton19.setText("-");
        sings.add(jButton19);
        jButton19.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton20.setText("/");
        sings.add(jButton20);
        jButton20.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton21.setText("%");
        esing.add(jButton21);
        jButton21.setPreferredSize(new java.awt.Dimension(50, 50));

        jButton22.setText("C");
        jButton22.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("log");
        esing.add(jButton23);
        jButton23.setPreferredSize(new java.awt.Dimension(50, 30));

        jButton24.setText("ln");
        esing.add(jButton24);
        jButton24.setPreferredSize(new java.awt.Dimension(50, 30));

        jButton25.setText("|x|");
        jButton25.setPreferredSize(new java.awt.Dimension(50, 30));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton26.setText("-1");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setText(".");
        buttons.add(jButton27);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton27)
                                .addGap(1, 1, 1)
                                .addComponent(jButton26)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void miPersonalizacion() {
        // Personalizar aquí los componentes
        for (int i = 0; i < buttons.size(); i++) {
            buttons.get(i).addActionListener((java.awt.event.ActionEvent evt) -> {
                jButtonActionPerformed(evt);
            });
        }
        for (int i = 0; i < sings.size(); i++) {
            sings.get(i).addActionListener((java.awt.event.ActionEvent evt) -> {
                jButtonActionPerformed2(evt);
            });
        }
        for (int i = 0; i < esing.size(); i++) {
            esing.get(i).addActionListener((java.awt.event.ActionEvent evt) -> {
                jButtonActionPerformed2(evt);
            });

        }
        jButton25.addActionListener((java.awt.event.ActionEvent evt) -> {
            jButtonActionPerformed(evt);
        });
        jButton26.addActionListener((java.awt.event.ActionEvent evt) -> {
            jButtonActionPerformed4(evt);
        });
        jTextArea1.getDocument().addDocumentListener(new DocumentListener() {
            private boolean isUpdating = false;

            @Override
            public void insertUpdate(DocumentEvent e) {
                try {
                    // Obtener los nuevos caracteres insertados
                    int offset = e.getOffset();
                    int length = e.getLength();
                    String nuevosCaracteres = e.getDocument().getText(offset, length);

                    cadenaf = cadenaf.concat(nuevosCaracteres);

                } catch (BadLocationException ex) {
                    ex.printStackTrace();
                }
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                if (isUpdating) {
                    return;
                }

                SwingUtilities.invokeLater(() -> {
                    isUpdating = true;
                    try {
                        if (cadena.isEmpty()) {
                            String textoActual = cadenaf.substring(cadenaf.length() - 1);
                            if (array2.size() > 0 && textoActual.equals(array2.getLast().trim())) {
                                int aux = jTextArea1.getText().lastIndexOf(array.getLast().toString());
                                array2.removeLast();

                                cadenaf = cadenaf.substring(0, cadenaf.length() - 1);
                            } else {
                                DecimalFormat df = new DecimalFormat("#.##");
                                String formattedValue = df.format(array.getLast());
                                int aux = cadenaf.lastIndexOf(formattedValue);
                                jTextArea1.replaceRange("", aux, jTextArea1.getText().length());
                                array.removeLast();
                                cadenaf = cadenaf.substring(0, aux);
                            }
                        } else {
                            cadenaf = cadenaf.substring(0, cadenaf.length() - 1);
                        }
                        if (cadena.length() > 1) {
                            cadena = cadena.substring(0, cadena.length() - 1);
                        } else {
                            cadena = cadena.substring(0, 0);
                        }
                    } finally {
                        isUpdating = false;
                    }
                });

            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // No aplica para texto plano
            }
        });

        this.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (e.getKeyCode() == KeyEvent.VK_RIGHT_PARENTHESIS || e.getKeyCode() == KeyEvent.VK_LEFT_PARENTHESIS) {
                    char c = e.getKeyChar();
                    for (int i = 0; i < buttons.size(); i++) {
                        if (buttons.get(i).getText().equals(String.valueOf(c))) {
                            buttons.get(i).doClick();
                        }
                    }
                }

            }

            @Override
            public void keyPressed(KeyEvent e) {
                System.out.println(e.getKeyCode());
                System.out.println(KeyEvent.VK_MULTIPLY);
                // Detectar teclas numéricas
                if ((e.getKeyCode() >= KeyEvent.VK_0 && e.getKeyCode() <= KeyEvent.VK_9) && !e.isShiftDown()) {

                    int number = e.getKeyCode() - KeyEvent.VK_0;
                    for (int i = 0; i < buttons.size(); i++) {
                        if (Integer.parseInt(buttons.get(i).getText()) == number) {

                            buttons.get(i).doClick();

                        }
                    }
                    // Simular clic en el botón correspondiente
                } else if ((e.getKeyCode() >= KeyEvent.VK_NUMPAD0 && e.getKeyCode() <= KeyEvent.VK_NUMPAD9)) {
                    int number = e.getKeyCode() - KeyEvent.VK_NUMPAD0;
                    for (int i = 0; i < buttons.size(); i++) {
                        if (buttons.get(i).getText().matches("-?\\d+") && Integer.parseInt(buttons.get(i).getText()) == number) {

                            buttons.get(i).doClick();

                        }
                    }
                } else if (e.isShiftDown()) {
                    if (e.getKeyCode() == KeyEvent.VK_8 || e.getKeyCode() == KeyEvent.VK_9) {
                        char c = e.getKeyChar();
                        for (int i = 0; i < buttons.size(); i++) {
                            if (buttons.get(i).getText().equals(String.valueOf(c))) {
                                buttons.get(i).doClick();
                            }
                        }
                    }
                } else if (e.getKeyCode() == KeyEvent.VK_ADD
                        || e.getKeyCode() == KeyEvent.VK_SUBTRACT
                        || e.getKeyCode() == KeyEvent.VK_MULTIPLY
                        || e.getKeyCode() == KeyEvent.VK_DIVIDE) {
                    Map<Integer, String> keyMapping = new HashMap<>();
                    keyMapping.put(KeyEvent.VK_ADD, "+");
                    keyMapping.put(KeyEvent.VK_SUBTRACT, "-");
                    keyMapping.put(KeyEvent.VK_MULTIPLY, "*");
                    keyMapping.put(KeyEvent.VK_DIVIDE, "/");
                    String c = keyMapping.get(e.getKeyCode());
                    for (JButton button : sings) {
                        if (button.getText().equals(c)) {
                            button.doClick();
                            break;
                        }
                    }
                } else if (e.getKeyCode() == KeyEvent.VK_PERIOD || e.getKeyCode() == KeyEvent.VK_ENTER || e.getKeyCode() == KeyEvent.VK_DECIMAL) {
                    if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                        jButton11.doClick();
                    } else {

                        jButton27.doClick();
                    }

                }

            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
        });
        jButton11.addActionListener((java.awt.event.ActionEvent evt) -> {
            jButtonActionPerformed3(evt);
        });
        this.setFocusable(true);
        this.requestFocusInWindow();
    }
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        jTextArea1.setText("");
        array.clear();
        array2.clear();
        cadena = cadena.replaceAll(cadena, "");
        cadenaf = "";
        requestFocusInWindow();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String button = getjButtonName((JButton) evt.getSource());
        if (button.equals("|x|")) {
            jTextArea1.append("|");
        } else {
            jTextArea1.append(button);
        }
        if (button.equals("(") || button.equals(")") || button.equals("|x|")) {
            if (button.equals("|x|")) {
                if (!nao) {
                    array2.add("[");
                    nao = true;
                } else {
                    array2.add("]");
                    nao = false;
                }
            } else {
                array2.add(button);
            }
        } else {
            cadena = cadena.concat(getjButtonName((JButton) evt.getSource()));
        }
        requestFocusInWindow();
    }
//necesito que si 

    private void jButtonActionPerformed2(java.awt.event.ActionEvent evt) {
        String button = getjButtonName((JButton) evt.getSource());
        jTextArea1.append(button);
        if (button.equals("%") && array.size() > 0 && (array2.size() > 0 && !(array2.getLast().equals("+") || array2.getLast().equals("-")))) {//arreglar condicion de %
            array.add(Double.parseDouble(cadena) / 100);
            cadena = cadena.replaceAll(cadena, "");
        } else if (button.equals("log") || button.equals("ln")) {
            if (button.equals("log")) {
                isLog = 1;
            } else {
                isLog = 2;
            }
            System.out.println(isLog);
        } else if (isLog > 0) {
            if (isLog == 1) {
                double res = cal.xLog(Double.parseDouble(cadena));
                array.add(res);
            } else {
                double res = cal.xLn(Double.parseDouble(cadena));
                array.add(res);
            }
            isLog = 0;
            array2.add(button);
            cadena = cadena.replaceAll(cadena, "");
        } else {

            array.add(Double.valueOf(cadena));//añade los numeros
            array2.add(button);//añade los simbolos
            cadena = cadena.replaceAll(cadena, "");

        }
        requestFocusInWindow();
    }

    private void jButtonActionPerformed3(java.awt.event.ActionEvent evt) {

        if (!array.isEmpty() || isLog > 0) {
            jTextArea1.append(getjButtonName((JButton) evt.getSource()));
            if (isLog == 1) {
                double res = cal.xLog(Double.parseDouble(cadena));
                array.add(res);
            } else if (isLog == 2) {
                double res = cal.xLn(Double.parseDouble(cadena));
                System.out.println(res);
                array.add(res);
            } else {
                array.add(Double.parseDouble(cadena));
            }
            b = array.toArray(b);
            a = array2.toArray(a);
            double res = Calculus(a, b, 0);
            jTextArea1.append(String.valueOf(res));
        } else {
            array.add(0.0);
            jTextArea1.append(String.valueOf(0));
        }
        requestFocusInWindow();
    }

    private void jButtonActionPerformed4(java.awt.event.ActionEvent evt) {

        jTextArea1.append("-1");
        cadena = cadena.concat("-1");
        jButton18.doClick();

    }

    private double Calculus(String[] signos, Double[] numeros, int adentro) {
        double resu = numeros[0];
        double aux1;
        boolean flag = false;
        int j = 0;
        for (int i = 0; i < numeros.length - 1; i++) {
            if (signos[j].equals("(") || signos[j].equals("[")) {
                int iterador = 0;
                int aux2 = j + 1;
                int aux3 = 0;
                do {
                    if (signos[aux2].equals("(") || signos[aux2].equals("[")) {
                        iterador++;
                        aux3 += 2;
                    }
                    if (signos[aux2].equals(")") || signos[aux2].equals("]")) {
                        iterador--;

                    }
                    if (iterador >= 0) {
                        aux2++;
                    }
                } while (iterador >= 0);
                Double[] subarray = Arrays.copyOfRange(numeros, i, aux2 - aux3);
                String[] substring = Arrays.copyOfRange(signos, j + 1, aux2);
                resu = Calculus(substring, subarray, adentro +1 );
                if (signos[j].equals("[") && resu < 0) {
                    resu = resu * -1;
                }
                if (adentro > 0 || i + 1 > numeros.length) {
                    return resu;
                }
                j = j + aux2 + 2 - 1;
                i = i + aux2 + 1 - 2 - aux3;//es i = i(tomo el valor actual) + aux2(cantidad de posiciones que se movio)+ 1(pos que deberia seguir) - 2(corrector porq 0 es una pos, y un -1 adicional por el codigo para que sepa el prox num) - aux3(excedente de aux2 para num) 
            }
            aux1 = resu;
            resu = numeros[i + 1];
            if (signos[j].equals("+") || signos[j].equals("-")) {
                int iterador = 0;
                int aux2 = j + 1;
                int aux3 = 0;
                if (!esSumable(j, signos) && j + 1 < signos.length) {
                    do {
                        if (signos[aux2].equals("(") || signos[aux2].equals("[")) {
                            iterador++;
                            aux3 += 2;
                        }
                        if (signos[aux2].equals(")") || signos[aux2].equals("]")) {
                            iterador--;

                        }
                        aux2++;
                        if (aux2 > signos.length - 1 || (iterador == 0 && (signos[aux2].equals("+") || signos[aux2].equals("-")))) {
                            break;
                        }

                    } while (iterador >= 0);
                    Double[] subarray = Arrays.copyOfRange(numeros, i + 1, i + aux2 + 1 - j - aux3);
                    String[] substring = Arrays.copyOfRange(signos, j + 1, aux2);
                    resu = Calculus(substring, subarray, adentro++);
                    if (signos[j].equals("[") && resu < 0) {
                        resu = resu * -1;
                    }
                    flag = true;
                }
                if (j + 1 < signos.length && signos[j + 1].equals("%")) {
                    resu = cal.xPorcentaje(aux1, resu);
                }
                if (signos[j].equals("+")) {
                    resu = cal.xSuma(aux1, resu);

                } else {
                    resu = cal.xResta(aux1, resu);
                }
                if (j + 1 < signos.length && signos[j + 1].equals("%")) {
                    j++;
                }
                if (flag) {
                    aux2 = aux2 - j;
                    j = j + aux2 - 1;//se pone mens uno asi cuando se hace la sumatoria al principio, tiene el valor correcto
                    i = i + aux2 - 1 - aux3;
                    flag = false;
                }

            } else if (signos[j].equals("*") || signos[j].equals("/") || signos[j].equals("√") || signos[j].equals("xⁿ")) {
                int iterador = 0;
                int aux2 = j + 2;
                int aux3 = 0;

                if (j + 1 < signos.length && (signos[j + 1].equals("(") || signos[j + 1].equals("["))) {
                    do {
                        if (signos[aux2].equals("(") || signos[aux2].equals("[")) {
                            iterador++;
                            aux3 += 2;
                        }
                        if (signos[aux2].equals(")") || signos[aux2].equals("]")) {
                            iterador--;

                        }
                        if (iterador >= 0) {
                            aux2++;
                        }
                    } while (iterador >= 0);
                    Double[] subarray = Arrays.copyOfRange(numeros, i + 1, aux2 - aux3);
                    String[] substring = Arrays.copyOfRange(signos, j + 2, aux2);
                    resu = Calculus(substring, subarray, adentro++);
                    if (signos[j].equals("[") && resu < 0) {
                        resu = resu * -1;
                    }
                    flag = true;
                } else if (j + 1 < signos.length && (signos[j + 1].equals("√") || signos[j + 1].equals("xⁿ"))) {
                    if (signos[j + 1].equals("xⁿ")) {
                        resu = cal.xExp(aux1, resu);
                    } else {
                        resu = cal.xRaiz(resu, numeros[i + 2]);
                    }
                    switch (signos[j]) {
                        case "*":
                            resu = cal.xMulti(aux1, resu);
                            break;
                        case "/":
                            resu = cal.xDiv(aux1, resu);
                            break;
                        case "√":
                            resu = cal.xRaiz(aux1, resu);
                            break;
                        default:
                            resu = cal.xExp(aux1, resu);
                            break;
                    }
                    i++;
                    j++;
                }
                switch (signos[j]) {
                    case "*":
                        resu = cal.xMulti(aux1, resu);
                        break;
                    case "/":
                        resu = cal.xDiv(aux1, resu);
                        break;
                    case "√":
                        resu = cal.xRaiz(aux1, resu);
                        break;
                    default:
                        resu = cal.xExp(aux1, resu);
                        break;
                }

                if (flag) {
                    j = aux2 + 2;
                    i = aux2 + 1 - aux3;
                    flag = false;
                }

            }
            j++;
        }
        return resu;
    }

    private String getjButtonName(JButton a) {
        return a.getText();
    }

    boolean esSumable(int j, String[] signos) {
        if (j < signos.length - 1) {
            return !(signos[j + 1].equals("*")//si el simbolo siguiente es algo q no corte
                    || signos[j + 1].equals("/")
                    || signos[j + 1].equals("%")
                    || signos[j + 1].equals("xⁿ")
                    || signos[j + 1].equals("√")
                    || signos[j + 1].equals("(")
                    ||signos[j + 1].equals("["));

        } else {
            return true;
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculatorA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new calculatorA().setVisible(true);
        });
    }
    private ArrayList<Double> array = new ArrayList<>();
    private ArrayList<String> array2 = new ArrayList<>();
    private String[] a = new String[array2.size()];
    private Double[] b = new Double[array.size()];
    private Calculus cal = new Calculus();
    private String cadena = "", cadenaf = "";
    private boolean nao = false;
    private int isLog = 0;
    private ArrayList<JButton> buttons = new ArrayList<>();
    private ArrayList<JButton> sings = new ArrayList<>();
    private ArrayList<JButton> esing = new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
